name: Pull Request Preview

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-preview:
    runs-on: ubuntu-latest
    env:
      # For PR events, github.head_ref is the branch name of the PR;
      # otherwise, fallback to github.ref_name if needed.
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      # 1. Check out the repository
      - name: Check out code
        uses: actions/checkout@v3

      # 2. Set up Node.js (version 16)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # 3. Install dependencies
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # 4. Build (should output to `dist/`)
      - name: Build project
        run: npm run build

      # 5. Copy index.html into dist/ if needed
      - name: Copy index.html
        run: cp src/index.html dist/index.html

      # 6. Place the build in a folder named after the branch
      - name: Prepare branch folder
        run: |
          mkdir -p builds/${BRANCH_NAME}
          cp -R dist/* builds/${BRANCH_NAME}/

      # 7. List what's inside `builds/` to confirm
      - name: Debug: List build artifacts
        run: ls -alR builds

      # 8. Publish entire `builds/` folder to `gh-pages` branch
      #    This will place each subfolder (like `dynamic`) at the root of gh-pages.
      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: builds
          keep_files: true          # Keep other branch folders
          allow_empty_commit: true  # Useful if no changes are detected
          disable_nojekyll: true    # Prevent GitHub's Jekyll from ignoring certain files/folders

      # 9. Write a summary with a link to the branch-specific preview.
      - name: Write deployment URL to job summary
        run: |
          echo "## Pages Preview Deployment \`${{ env.BRANCH_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "[View Deployment](https://rebumatadele.github.io/poc-github-pages-v3/${{ env.BRANCH_NAME }})" >> $GITHUB_STEP_SUMMARY
