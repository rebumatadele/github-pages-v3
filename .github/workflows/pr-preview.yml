name: Pull Request Preview

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-preview:
    runs-on: ubuntu-latest
    env:
      # For PR events, github.head_ref is set; fallback to github.ref_name if needed.
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
    steps:
      # 1. Checkout the repository.
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Node.js (version 16).
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # 3. Install dependencies (using legacy peer deps to avoid conflicts).
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # 4. Run the build (your bundler should output to the dist/ folder).
      - name: Build project
        run: npm run build

      # 5. Copy index.html (or other necessary files) so Pages can find it.
      - name: Copy index.html to dist/
        run: cp src/index.html dist/index.html

      # 6. Prepare a folder named after the branch inside a temporary builds/ directory.
      - name: Prepare branch build directory
        run: |
          mkdir -p builds/${BRANCH_NAME}
          cp -R dist/* builds/${BRANCH_NAME}/

      # 7. Debug: List the contents of the builds directory to verify the branch folder and its files.
      - name: List build artifacts
        run: ls -alR builds

      # 8. Deploy the entire builds/ folder to GitHub Pages incrementally.
      #    Using 'keep_files: true' ensures that the action updates only the files present in builds/,
      #    leaving folders for other branches intact.
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: builds/{{ env.BRANCH_NAME }}
          keep_files: true
          allow_empty_commit: true  # Optional: useful for debugging if no changes are detected.
          disable_nojekyll: true    # Prevent GitHub's Jekyll from ignoring certain files/folders


      # 9. Write a summary with a link to the branch-specific preview.
      - name: Write deployment URL to job summary
        run: |
          echo "## Pages Preview Deployment \`${{ env.BRANCH_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "[View Deployment](https://rebumatadele.github.io/poc-github-pages-v3/${{ env.BRANCH_NAME }})" >> $GITHUB_STEP_SUMMARY
