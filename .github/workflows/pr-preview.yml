name: Pull Request Preview

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-preview:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Node.js (version 16)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # 3. Install dependencies using legacy peer deps to avoid conflicts
      - name: Install dependencies
        run: npm install --legacy-peer-deps

      # 4. Get branch name and set it as an environment variable
      - name: Get branch name
        run: echo "BRANCH_NAME=${GITHUB_HEAD_REF}" >> $GITHUB_ENV

      # 5. Run the build (Webpack should output to the dist/ folder)
      - name: Build project
        run: npm run build

      # 6. Store the build inside a branch-named directory
      - name: Move build to branch-named folder
        run: |
          mkdir -p "builds/${BRANCH_NAME}"
          mv dist/* "builds/${BRANCH_NAME}/"

      # 7. Copy index.html from src/ to builds/branch/ (so GitHub Pages can find it)
      - name: Copy index.html to branch-named folder
        run: cp src/index.html "builds/${BRANCH_NAME}/index.html"

      # 8. Configure GitHub Pages
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v3

      # 9. Upload the built site (branch folder) as the artifact named "github-pages"
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: builds/${{ env.BRANCH_NAME }}
          name: github-pages

      # 10. Deploy the uploaded artifact to GitHub Pages (Preview Mode)
      - name: Deploy to GitHub Pages (Preview)
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          artifact_name: github-pages
          preview: true

      # 11. Write the deployment URL to the job summary
      - name: Write deployment URL to job summary
        run: |
          echo "## Pages Preview Deployment \`${{ env.BRANCH_NAME }}\`" >> $GITHUB_STEP_SUMMARY
          echo "[View Deployment](${{ steps.deployment.outputs.page_url }})" >> $GITHUB_STEP_SUMMARY
